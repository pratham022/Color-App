[{"/home/prathamesh/REACT_/Colors-Project/colors-app/src/ColorBox.js":"1","/home/prathamesh/REACT_/Colors-Project/colors-app/src/App.js":"2","/home/prathamesh/REACT_/Colors-Project/colors-app/src/SingleColorPalette.js":"3","/home/prathamesh/REACT_/Colors-Project/colors-app/src/Palette.js":"4","/home/prathamesh/REACT_/Colors-Project/colors-app/src/Navbar.js":"5","/home/prathamesh/REACT_/Colors-Project/colors-app/src/seedColors.js":"6","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteList.js":"7","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorBoxStyles.js":"8","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteStyles.js":"9","/home/prathamesh/REACT_/Colors-Project/colors-app/src/MiniPalette.js":"10","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteFooter.js":"11","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFooterStyles.js":"12","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/MiniPaletteStyles.js":"13","/home/prathamesh/REACT_/Colors-Project/colors-app/src/NewPaletteForm.js":"14","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteListStyles.js":"15","/home/prathamesh/REACT_/Colors-Project/colors-app/src/index.js":"16","/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorBox.js":"17","/home/prathamesh/REACT_/Colors-Project/colors-app/src/colorHelpers.js":"18","/home/prathamesh/REACT_/Colors-Project/colors-app/src/reportWebVitals.js":"19","/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorList.js":"20","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteFormNav.js":"21","/home/prathamesh/REACT_/Colors-Project/colors-app/src/ColorPickerForm.js":"22","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteMetaForm.js":"23"},{"size":2236,"mtime":1609169383362,"results":"24","hashOfConfig":"25"},{"size":2210,"mtime":1609351081728,"results":"26","hashOfConfig":"25"},{"size":2246,"mtime":1609169571570,"results":"27","hashOfConfig":"25"},{"size":2149,"mtime":1609169618928,"results":"28","hashOfConfig":"25"},{"size":4005,"mtime":1609174916398,"results":"29","hashOfConfig":"25"},{"size":9798,"mtime":1607854628783,"results":"30","hashOfConfig":"25"},{"size":1249,"mtime":1609222956939,"results":"31","hashOfConfig":"25"},{"size":713,"mtime":1609169345981,"results":"32","hashOfConfig":"25"},{"size":855,"mtime":1609169550354,"results":"33","hashOfConfig":"25"},{"size":1200,"mtime":1609169823094,"results":"34","hashOfConfig":"25"},{"size":431,"mtime":1609173930338,"results":"35","hashOfConfig":"25"},{"size":295,"mtime":1609173905104,"results":"36","hashOfConfig":"25"},{"size":956,"mtime":1609169796402,"results":"37","hashOfConfig":"25"},{"size":5432,"mtime":1609406121010,"results":"38","hashOfConfig":"25"},{"size":743,"mtime":1609348210803,"results":"39","hashOfConfig":"25"},{"size":599,"mtime":1608218788256,"results":"40","hashOfConfig":"25"},{"size":1468,"mtime":1609357405823,"results":"41","hashOfConfig":"25"},{"size":3156,"mtime":1608033621078,"results":"42","hashOfConfig":"25"},{"size":362,"mtime":1607854175887,"results":"43","hashOfConfig":"25"},{"size":609,"mtime":1609357512054,"results":"44","hashOfConfig":"25"},{"size":3210,"mtime":1609494595962,"results":"45","hashOfConfig":"25"},{"size":3503,"mtime":1609405911712,"results":"46","hashOfConfig":"25"},{"size":3267,"mtime":1609493933031,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1vc23ne",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},"/home/prathamesh/REACT_/Colors-Project/colors-app/src/ColorBox.js",["109","110"],"import React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\n\nimport './ColorBox.css';\nimport styles from './styles/ColorBoxStyles';\n\n\n\nclass ColorBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            copied: false\n        }\n        this.changeCopyState = this.changeCopyState.bind(this);\n    }\n    changeCopyState() {\n        this.setState({\n            copied: true\n        }, () => { setTimeout(() => this.setState({ copied: false }), 1500)\n        });\n    }\n    render() { \n        const {name, background, paletteId, id, showLink, classes} = this.props;\n        const {copied} = this.state;\n        const isDarkColor = chroma(background).luminance() <= 0.08;\n        const isLightColor = chroma(background).luminance() >= 0.5;\n        return ( \n            <CopyToClipboard text={background} onCopy={this.changeCopyState}>\n                <div style={{background: background}} className='ColorBox'>\n                    <div style={{background: background}} className={`copy-overlay ${copied && 'show'}`} />   {/* This div will grow and will take the entire screen when copied! */}\n                    <div className={`copy-msg ${copied && 'show'}`}>\n                        <h1>copied!</h1>\n                        <p className={classes.copyText}>{background}</p>\n                    </div>\n                    <div className='copy-container'>\n                        <div className='box-content'>\n                            <span className={classes.colorName}>{name}</span>\n                        </div>\n                        <button className={`copy-button ${classes.copyText}`}>Copy</button>\n                    </div>\n                    {showLink && (\n                        <Link to={`/palette/${paletteId}/${id}`} onClick={e => e.stopPropagation()}>\n                            <span className={`${classes.seeMore}`}>MORE</span>\n                        </Link>\n                    )}\n                </div>\n            </CopyToClipboard>\n        );\n    }\n}\n \nexport default withStyles(styles)(ColorBox);",["111","112"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/App.js",[],["113","114"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/SingleColorPalette.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/Palette.js",[],["115","116"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/Navbar.js",["117","118","119"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/styles';\n\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport './Navbar.css';\n\nconst styles = {\n    Navbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        height: '6vh',\n    },\n    logo: {\n        marginRight: '15px',\n        padding: '0 13px',\n        fontSize: '22px',\n        backgroundColor: '#eceff1',\n        fontFamily: 'Roboto',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        alignItems: 'center',\n        '& a': {\n            textDecoration: 'none',\n            color: 'black'\n        }\n    },\n    slider: {\n        width: '340px',\n        margin: '0 10px',\n        display: 'inline-block'\n    }\n}\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            format: 'hex',\n            open: false\n        }\n        this.handleFormatChange = this.handleFormatChange.bind(this);\n        this.closeSnackbar = this.closeSnackbar.bind(this);\n    }\n    handleFormatChange(e) {\n        this.setState({\n            format: e.target.value,\n            open: true\n        });\n        this.props.handleChange(e.target.value);\n    }\n    closeSnackbar() {\n        this.setState({\n            open: false\n        });\n    }\n    render() { \n        const { level, changeLevel, handleChange, showingAllColors, classes } = this.props;\n        const { format } = this.state;\n        return ( \n           <header className={classes.Navbar}>\n               <div className={classes.logo}>\n                   <Link to='/'>reactcolorpicker</Link>\n               </div>\n               {showingAllColors && (\n                    <div>\n                        <span>Level: {level}</span>\n                        <div className={classes.slider}>\n                            <Slider \n                                defaultValue={level} \n                                min={100} \n                                max={900} \n                                step={100} \n                                onAfterChange={changeLevel}/>\n                        </div>\n                    </div>\n               )}\n               <div className='select-container'>\n                    <Select value={this.state.format} onChange={this.handleFormatChange}>\n                        <MenuItem value='hex'>HEX - #ffffff</MenuItem>\n                        <MenuItem value='rgb'>RGB - rgb(255, 255, 255)</MenuItem>\n                        <MenuItem value='rgba'>RGBA - rgba(255, 255, 255, 0)</MenuItem>\n                    </Select>\n               </div>\n               <Snackbar \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={3000}\n                    message={<span id='message-id'>Format Changed To {format.toUpperCase()}</span>}\n                    ContentProps={{\n                        'aria-describedby': 'message-id'\n                    }}\n                    onClose={this.closeSnackbar}\n                    action={[\n                        <IconButton \n                            onClick={this.closeSnackbar} \n                            color='inherit' \n                            key='close' \n                            aria-label='close'>\n                            \n                            <CloseIcon />\n                        </IconButton>\n                    ]}\n               />\n           </header> \n        );\n    }\n}\n\n \nexport default withStyles(styles)(Navbar);","/home/prathamesh/REACT_/Colors-Project/colors-app/src/seedColors.js",["120"],"export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteList.js",[],["121","122"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorBoxStyles.js",["123"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteStyles.js",["124"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/MiniPalette.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteFooter.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFooterStyles.js",["125"],"export default {\n    PaletteFooter: {\n        backgroundColor: 'white',\n        height: '9vh',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        fontWeight: 'bold',\n    },\n    emoji: {\n        fontSize: '1.5rem',\n        margin: '0 1rem',\n    }\n}","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/MiniPaletteStyles.js",["126"],"export default {\n    root: {\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '5px',\n        padding: '0.5rem',\n        position: 'relative',\n        overflow: 'hidden',\n        '&:hover': {\n            cursor: 'pointer',\n        }\n    },\n    colors: {\n        backgroundColor: '#dae1e4',\n        height: '150px',\n        width: '100%',\n        borderRadius: '5px',\n        overflow: 'hidden'\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        margin: '0',\n        color: 'black',\n        paddingTop: '0.5rem',\n        fontSize: '1rem',\n        position: 'relative'\n    },\n    emoji: {\n        marginLeft: '0.5rem',\n        fontSize: '1.5rem',\n    },\n    miniColor: {\n        height: '25%',\n        width: '20%',\n        display: 'inline-block',\n        margin: '0 auto',\n        position: 'relative',\n        marginBottom: '-3.5px'\n    }\n};","/home/prathamesh/REACT_/Colors-Project/colors-app/src/NewPaletteForm.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteListStyles.js",["127"],"export default {\n    root: {\n        backgroundColor: 'blue',\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    container: {\n        width: '60%',\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n\n\n    },\n    nav: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n        color: 'white',\n        alignItems: 'center',\n        '& a': {\n            color: 'white'\n        }\n    },\n    palettes: {\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 30%)',\n        gridGap: '5%',\n    }\n};",["128","129"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/index.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorBox.js",["130","131"],"import { getThemeProps } from '@material-ui/styles';\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\n\nconst styles = {\n    root: {\n        width: '20%',\n        height: '25%',\n        margin: '0 auto',\n        display: 'inline-block',\n        position: 'relative',\n        marginBottom: '-3.5px',\n        '&:hover svg': {\n            color: 'white',\n            transform: 'scale(1.5)'\n        }\n    },\n    boxContent: {\n        position: 'absolute',\n        padding: '10px',\n        width: '100%',\n        left: '0px',\n        bottom: '0px',\n        letterSpacing: '1px',\n        textTransform: 'uppercase',\n        fontSize: '12px',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    deleteIcon: {\n        color: 'rgba(0, 0, 0, 0.5)',\n        transition: 'all 0.3s ease-in-out'\n    }\n}\n\nconst DraggableColorBox = SortableElement((props) => {\n    const {classes, handleClick, name, color} = props;\n    return(\n        <div className={classes.root} style={{backgroundColor: color}}>\n            <div className={classes.boxContent}>\n                <span>{name}</span>\n                <DeleteIcon \n                    className={classes.deleteIcon} \n                    onClick={handleClick}/>\n            </div>\n        </div>\n    );\n})\n\nexport default withStyles(styles)(DraggableColorBox);","/home/prathamesh/REACT_/Colors-Project/colors-app/src/colorHelpers.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/reportWebVitals.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorList.js",["132"],"import React from 'react';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\n\nimport DraggableColorBox from './DraggableColorBox';\n\nconst DraggableColorList = SortableContainer(({colors, removeColor}) =>{\n    return (\n        <div style={{height: '100%'}}>\n            {colors.map((color, i) => (\n            <DraggableColorBox \n              index={i}\n              key={color.name}\n              color={color.color} \n              name={color.name} \n              handleClick={() => removeColor(color.name)}/>\n            ))}\n        </div>\n    )\n});\n\nexport default DraggableColorList;","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteFormNav.js",["133","134","135"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/ColorPickerForm.js",["136"],"import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ChromePicker } from 'react-color';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n    pickerContainer: {\n        width: '100%',\n    },\n    picker: {\n        width: '100% !important',\n        marginTop: '2rem'\n    },\n    addColor: {\n        width: '100%',\n        padding: '1rem',\n        marginTop: '1rem',\n        fontSize: '2rem'\n    },\n    colorNameInput: {\n        width: '100%',\n        height: '70px'\n    }\n}\n\nclass ColorPickerForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            background: '#3434B8',\n            newColorName: '',\n        }\n    }\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule('isColorNameUnique', value => (\n            this.props.colors.every(currColor => (\n                currColor.name.toLowerCase() !== value.toLowerCase()\n            ))\n        ));\n    \n        ValidatorForm.addValidationRule('isColorUnique', value => (\n            this.props.colors.every(currColor => (\n                currColor.color !== this.state.background\n            ))\n        ));\n    \n      }\n    \n    handleChangeComplete = (color) => {\n        this.setState({ background: color.hex });\n    };\n\n    handleChange = (evt) => {\n        this.setState({\n        [evt.target.name]: evt.target.value\n        });\n        // this.setState({\n        //     newColorName: evt.target.value\n        // })\n    }\n    handleSubmit = () => {\n        const newColor = {\n            color: this.state.background,\n            name: this.state.newColorName\n        }\n        this.props.addNewColor(newColor);\n        this.setState({\n            background: '#2626A8',\n            newColorName: ''\n        })\n    }\n    render() { \n        const { classes, paletteIsFull, addNewColor } = this.props;\n        return ( \n            <div className={classes.pickerContainer}>\n                <ChromePicker\n                    color={ this.state.background }\n                    onChangeComplete={ this.handleChangeComplete }\n                    className={classes.picker}\n                />\n                <ValidatorForm onSubmit={this.handleSubmit}>\n                    <TextValidator \n                        value={this.state.newColorName}\n                        name='newColorName'\n                        variant=\"filled\"\n                        className={classes.colorNameInput}\n                        margin='normal'\n                        placeholder='Color Name'\n                        onChange={this.handleChange}\n                        validators={['required', 'isColorNameUnique', 'isColorUnique']}\n                        errorMessages={['This field is required', 'Color name must be unique', 'Color already used']}\n                    />\n                    <Button \n                        variant='contained' \n                        color='primary'\n                        className={classes.addColor}\n                        style={{backgroundColor: paletteIsFull ? '#808080' : this.state.background}}\n                        disabled={paletteIsFull}\n                        type='submit'>\n                        {paletteIsFull ? 'Palette Full' : 'Add Color'}\n                    </Button>\n                </ValidatorForm>\n            </div>\n        );\n    }\n}\n \nexport default withStyles(styles)(ColorPickerForm);","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteMetaForm.js",["137"],"import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nclass PaletteMetaForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            open: false,\n            newPaletteName: ''\n        }\n    }\n    componentDidMount() {\n        ValidatorForm.addValidationRule('isPaletteNameUnique', value => (\n            this.props.palettes.every(currPalette => (\n                currPalette.paletteName.toLowerCase() !== value.toLowerCase()\n            ))\n        ));\n    }\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        })\n    }\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    }\n    render() { \n        const { newPaletteName } = this.state;\n        return ( \n            <div>\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n                    Open form dialog\n                </Button>\n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To subscribe to this website, please enter your email address here. We will send updates\n                            occasionally.\n                        </DialogContentText>\n                        <ValidatorForm onSubmit={() => this.props.handleSubmit(newPaletteName)}>\n                        <TextValidator \n                            label='Palette Name' \n                            value={this.state.newPaletteName} \n                            name='newPaletteName' \n                            onChange={this.handleChange} \n                            validators={['required', 'isPaletteNameUnique']} \n                            errorMessages={['Enter Palette Name', 'Palette Name already used']}/>\n                        <Button\n                            variant='contained' \n                            color='primary' \n                            type='submit'>Save Palette</Button>\n                        </ValidatorForm>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Subscribe\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n \nexport default PaletteMetaForm;",{"ruleId":"138","severity":1,"message":"139","line":29,"column":15,"nodeType":"140","messageId":"141","endLine":29,"endColumn":26},{"ruleId":"138","severity":1,"message":"142","line":30,"column":15,"nodeType":"140","messageId":"141","endLine":30,"endColumn":27},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"145","replacedBy":"150"},{"ruleId":"138","severity":1,"message":"151","line":10,"column":18,"nodeType":"140","messageId":"141","endLine":10,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":31,"column":9,"nodeType":"154","messageId":"155","endLine":31,"endColumn":19},{"ruleId":"138","severity":1,"message":"156","line":67,"column":37,"nodeType":"140","messageId":"141","endLine":67,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":1,"column":1,"nodeType":"159","endLine":244,"endColumn":3},{"ruleId":"143","replacedBy":"160"},{"ruleId":"145","replacedBy":"161"},{"ruleId":"157","severity":1,"message":"162","line":3,"column":1,"nodeType":"159","endLine":23,"endColumn":2},{"ruleId":"157","severity":1,"message":"162","line":1,"column":1,"nodeType":"159","endLine":29,"endColumn":2},{"ruleId":"157","severity":1,"message":"162","line":1,"column":1,"nodeType":"159","endLine":14,"endColumn":2},{"ruleId":"157","severity":1,"message":"162","line":1,"column":1,"nodeType":"159","endLine":42,"endColumn":3},{"ruleId":"157","severity":1,"message":"162","line":1,"column":1,"nodeType":"159","endLine":35,"endColumn":3},{"ruleId":"143","replacedBy":"163"},{"ruleId":"145","replacedBy":"164"},{"ruleId":"138","severity":1,"message":"165","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":23},{"ruleId":"138","severity":1,"message":"166","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":26},{"ruleId":"138","severity":1,"message":"167","line":2,"column":28,"nodeType":"140","messageId":"141","endLine":2,"endColumn":43},{"ruleId":"138","severity":1,"message":"168","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":23},{"ruleId":"138","severity":1,"message":"169","line":11,"column":25,"nodeType":"140","messageId":"141","endLine":11,"endColumn":38},{"ruleId":"138","severity":1,"message":"170","line":67,"column":17,"nodeType":"140","messageId":"141","endLine":67,"endColumn":31},{"ruleId":"138","severity":1,"message":"171","line":75,"column":41,"nodeType":"140","messageId":"141","endLine":75,"endColumn":52},{"ruleId":"138","severity":1,"message":"172","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},"no-unused-vars","'isDarkColor' is assigned a value but never used.","Identifier","unusedVar","'isLightColor' is assigned a value but never used.","no-native-reassign",["173"],"no-negated-in-lhs",["174"],["173"],["174"],["173"],["174"],"'Range' is defined but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","'handleChange' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["173"],["174"],"Assign object to a variable before exporting as module default",["173"],["174"],"'getThemeProps' is defined but never used.","'SortableContainer' is defined but never used.","'SortableElement' is defined but never used.","'ValidatorForm' is defined but never used.","'TextValidator' is defined but never used.","'newPaletteName' is assigned a value but never used.","'addNewColor' is assigned a value but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]