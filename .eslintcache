[{"/home/prathamesh/REACT_/Colors-Project/colors-app/src/ColorBox.js":"1","/home/prathamesh/REACT_/Colors-Project/colors-app/src/App.js":"2","/home/prathamesh/REACT_/Colors-Project/colors-app/src/SingleColorPalette.js":"3","/home/prathamesh/REACT_/Colors-Project/colors-app/src/Palette.js":"4","/home/prathamesh/REACT_/Colors-Project/colors-app/src/Navbar.js":"5","/home/prathamesh/REACT_/Colors-Project/colors-app/src/seedColors.js":"6","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteList.js":"7","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorBoxStyles.js":"8","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteStyles.js":"9","/home/prathamesh/REACT_/Colors-Project/colors-app/src/MiniPalette.js":"10","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteFooter.js":"11","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFooterStyles.js":"12","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/MiniPaletteStyles.js":"13","/home/prathamesh/REACT_/Colors-Project/colors-app/src/NewPaletteForm.js":"14","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteListStyles.js":"15","/home/prathamesh/REACT_/Colors-Project/colors-app/src/index.js":"16","/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorBox.js":"17","/home/prathamesh/REACT_/Colors-Project/colors-app/src/colorHelpers.js":"18","/home/prathamesh/REACT_/Colors-Project/colors-app/src/reportWebVitals.js":"19","/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorList.js":"20"},{"size":2236,"mtime":1609169383362,"results":"21","hashOfConfig":"22"},{"size":2210,"mtime":1609351081728,"results":"23","hashOfConfig":"22"},{"size":2246,"mtime":1609169571570,"results":"24","hashOfConfig":"22"},{"size":2149,"mtime":1609169618928,"results":"25","hashOfConfig":"22"},{"size":4005,"mtime":1609174916398,"results":"26","hashOfConfig":"22"},{"size":9798,"mtime":1607854628783,"results":"27","hashOfConfig":"22"},{"size":1249,"mtime":1609222956939,"results":"28","hashOfConfig":"22"},{"size":713,"mtime":1609169345981,"results":"29","hashOfConfig":"22"},{"size":855,"mtime":1609169550354,"results":"30","hashOfConfig":"22"},{"size":1200,"mtime":1609169823094,"results":"31","hashOfConfig":"22"},{"size":431,"mtime":1609173930338,"results":"32","hashOfConfig":"22"},{"size":295,"mtime":1609173905104,"results":"33","hashOfConfig":"22"},{"size":956,"mtime":1609169796402,"results":"34","hashOfConfig":"22"},{"size":7928,"mtime":1609358028123,"results":"35","hashOfConfig":"22"},{"size":743,"mtime":1609348210803,"results":"36","hashOfConfig":"22"},{"size":599,"mtime":1608218788256,"results":"37","hashOfConfig":"22"},{"size":1468,"mtime":1609357405823,"results":"38","hashOfConfig":"22"},{"size":3156,"mtime":1608033621078,"results":"39","hashOfConfig":"22"},{"size":362,"mtime":1607854175887,"results":"40","hashOfConfig":"22"},{"size":609,"mtime":1609357512054,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vc23ne",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/home/prathamesh/REACT_/Colors-Project/colors-app/src/ColorBox.js",["91","92"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/App.js",[],["93","94"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/SingleColorPalette.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/Palette.js",[],["95","96"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/Navbar.js",["97","98","99"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/seedColors.js",["100"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteList.js",[],["101","102"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorBoxStyles.js",["103"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteStyles.js",["104"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/MiniPalette.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteFooter.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFooterStyles.js",["105"],"export default {\n    PaletteFooter: {\n        backgroundColor: 'white',\n        height: '9vh',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        fontWeight: 'bold',\n    },\n    emoji: {\n        fontSize: '1.5rem',\n        margin: '0 1rem',\n    }\n}","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/MiniPaletteStyles.js",["106"],"export default {\n    root: {\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '5px',\n        padding: '0.5rem',\n        position: 'relative',\n        overflow: 'hidden',\n        '&:hover': {\n            cursor: 'pointer',\n        }\n    },\n    colors: {\n        backgroundColor: '#dae1e4',\n        height: '150px',\n        width: '100%',\n        borderRadius: '5px',\n        overflow: 'hidden'\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        margin: '0',\n        color: 'black',\n        paddingTop: '0.5rem',\n        fontSize: '1rem',\n        position: 'relative'\n    },\n    emoji: {\n        marginLeft: '0.5rem',\n        fontSize: '1.5rem',\n    },\n    miniColor: {\n        height: '25%',\n        width: '20%',\n        display: 'inline-block',\n        margin: '0 auto',\n        position: 'relative',\n        marginBottom: '-3.5px'\n    }\n};","/home/prathamesh/REACT_/Colors-Project/colors-app/src/NewPaletteForm.js",["107"],"import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from \"@material-ui/core/Button\";\nimport { ChromePicker } from 'react-color';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport DraggableColorBox from './DraggableColorBox';\nimport DraggableColorList from './DraggableColorList';\n\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    height: 'calc(100vh - 64px)',\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nclass NewPaletteForm extends Component {\n  state = {\n    open: true,\n    background: '#3434B8',\n    newColorName: '',\n    colors: [\n        {color: 'blue', name: 'Blue'},\n        {color: 'pink', name: 'Pink'},\n    ],\n    newPaletteName: ''\n  };\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isColorNameUnique', value => (\n        this.state.colors.every(currColor => (\n            currColor.name.toLowerCase() !== value.toLowerCase()\n        ))\n    ));\n\n    ValidatorForm.addValidationRule('isColorUnique', value => (\n        this.state.colors.every(currColor => (\n            currColor.color !== this.state.background\n        ))\n    ));\n\n    ValidatorForm.addValidationRule('isPaletteNameUnique', value => (\n      this.props.palettes.every(currPalette => (\n          currPalette.paletteName.toLowerCase() !== value.toLowerCase()\n      ))\n  ));\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex });\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  addNewColor = () => {\n      const newColor = {\n            color: this.state.background,\n            name: this.state.newColorName\n        }\n      this.setState({\n          colors: [...this.state.colors, newColor],\n          background: '#02021B',\n          newColorName: ''\n      })\n  }\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n    // this.setState({\n    //     newColorName: evt.target.value\n    // })\n  }\n\n  handleSubmit = () => {\n    let newColorName = this.state.newPaletteName;\n    const newPalette = {\n      paletteName: newColorName,\n      id: newColorName.toLowerCase().replace(/ /g, '-'),\n      colors: this.state.colors,\n    }\n    this.props.savePalette(newPalette);\n    this.props.history.push('/');\n  }\n\n  removeColor = (colorName) => {\n      this.setState({\n        colors: this.state.colors.filter(color => color.name !== colorName)\n      });\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({colors}) => ({\n      colors: arrayMove(colors, oldIndex, newIndex),\n    }));\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position='fixed'\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n          color='default'\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color='inherit'\n              aria-label='Open drawer'\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit' noWrap>\n              Persistent drawer\n            </Typography>\n            <ValidatorForm onSubmit={this.handleSubmit}>\n              <TextValidator \n                  label='Palette Name' \n                  value={this.state.newPaletteName} \n                  name='newPaletteName' \n                  onChange={this.handleChange} \n                  validators={['required', 'isPaletteNameUnique']} \n                  errorMessages={['Enter Palette Name', 'Palette Name already used']}/>\n              <Button\n                variant='contained' \n                color='primary' \n                type='submit'>Save Palette</Button>\n            </ValidatorForm>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant='persistent'\n          anchor='left'\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n\n          <Typography variant='h4'>Design Your Palette</Typography>\n          <div>\n            <Button variant='contained' color='secondary'>CLEAR PALETTE</Button>\n            <Button variant='contained' color='primary'>RANDOM COLOR</Button>\n          </div>\n          <ChromePicker\n            color={ this.state.background }\n            onChangeComplete={ this.handleChangeComplete }\n          />\n          <ValidatorForm onSubmit={this.addNewColor}>\n            <TextValidator \n                value={this.state.newColorName}\n                name='newColorName'\n                onChange={this.handleChange}\n                validators={['required', 'isColorNameUnique', 'isColorUnique']}\n                errorMessages={['This field is required', 'Color name must be unique', 'Color already used']}\n            />\n            <Button \n                variant='contained' \n                color='primary'\n                style={{backgroundColor: this.state.background}}\n                type='submit'>\n                    ADD COLOR\n            </Button>\n          </ValidatorForm>\n\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <DraggableColorList \n            onSortEnd={this.onSortEnd}\n            colors={this.state.colors} \n            removeColor={this.removeColor} \n            axis='xy'/>\n        </main>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteListStyles.js",["108"],"export default {\n    root: {\n        backgroundColor: 'blue',\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    container: {\n        width: '60%',\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n\n\n    },\n    nav: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n        color: 'white',\n        alignItems: 'center',\n        '& a': {\n            color: 'white'\n        }\n    },\n    palettes: {\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 30%)',\n        gridGap: '5%',\n    }\n};","/home/prathamesh/REACT_/Colors-Project/colors-app/src/index.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorBox.js",["109","110"],"import { getThemeProps } from '@material-ui/styles';\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\n\nconst styles = {\n    root: {\n        width: '20%',\n        height: '25%',\n        margin: '0 auto',\n        display: 'inline-block',\n        position: 'relative',\n        marginBottom: '-3.5px',\n        '&:hover svg': {\n            color: 'white',\n            transform: 'scale(1.5)'\n        }\n    },\n    boxContent: {\n        position: 'absolute',\n        padding: '10px',\n        width: '100%',\n        left: '0px',\n        bottom: '0px',\n        letterSpacing: '1px',\n        textTransform: 'uppercase',\n        fontSize: '12px',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    deleteIcon: {\n        color: 'rgba(0, 0, 0, 0.5)',\n        transition: 'all 0.3s ease-in-out'\n    }\n}\n\nconst DraggableColorBox = SortableElement((props) => {\n    const {classes, handleClick, name, color} = props;\n    return(\n        <div className={classes.root} style={{backgroundColor: color}}>\n            <div className={classes.boxContent}>\n                <span>{name}</span>\n                <DeleteIcon \n                    className={classes.deleteIcon} \n                    onClick={handleClick}/>\n            </div>\n        </div>\n    );\n})\n\nexport default withStyles(styles)(DraggableColorBox);","/home/prathamesh/REACT_/Colors-Project/colors-app/src/colorHelpers.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/reportWebVitals.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/DraggableColorList.js",["111"],"import React from 'react';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\n\nimport DraggableColorBox from './DraggableColorBox';\n\nconst DraggableColorList = SortableContainer(({colors, removeColor}) =>{\n    return (\n        <div style={{height: '100%'}}>\n            {colors.map((color, i) => (\n            <DraggableColorBox \n              index={i}\n              key={color.name}\n              color={color.color} \n              name={color.name} \n              handleClick={() => removeColor(color.name)}/>\n            ))}\n        </div>\n    )\n});\n\nexport default DraggableColorList;",{"ruleId":"112","severity":1,"message":"113","line":29,"column":15,"nodeType":"114","messageId":"115","endLine":29,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":30,"column":15,"nodeType":"114","messageId":"115","endLine":30,"endColumn":27},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"112","severity":1,"message":"123","line":10,"column":18,"nodeType":"114","messageId":"115","endLine":10,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":31,"column":9,"nodeType":"126","messageId":"127","endLine":31,"endColumn":19},{"ruleId":"112","severity":1,"message":"128","line":67,"column":37,"nodeType":"114","messageId":"115","endLine":67,"endColumn":49},{"ruleId":"129","severity":1,"message":"130","line":1,"column":1,"nodeType":"131","endLine":244,"endColumn":3},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},{"ruleId":"129","severity":1,"message":"134","line":3,"column":1,"nodeType":"131","endLine":23,"endColumn":2},{"ruleId":"129","severity":1,"message":"134","line":1,"column":1,"nodeType":"131","endLine":29,"endColumn":2},{"ruleId":"129","severity":1,"message":"134","line":1,"column":1,"nodeType":"131","endLine":14,"endColumn":2},{"ruleId":"129","severity":1,"message":"134","line":1,"column":1,"nodeType":"131","endLine":42,"endColumn":3},{"ruleId":"112","severity":1,"message":"135","line":18,"column":8,"nodeType":"114","messageId":"115","endLine":18,"endColumn":25},{"ruleId":"129","severity":1,"message":"134","line":1,"column":1,"nodeType":"131","endLine":35,"endColumn":3},{"ruleId":"112","severity":1,"message":"136","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":23},{"ruleId":"112","severity":1,"message":"137","line":5,"column":9,"nodeType":"114","messageId":"115","endLine":5,"endColumn":26},{"ruleId":"112","severity":1,"message":"138","line":2,"column":28,"nodeType":"114","messageId":"115","endLine":2,"endColumn":43},"no-unused-vars","'isDarkColor' is assigned a value but never used.","Identifier","unusedVar","'isLightColor' is assigned a value but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"'Range' is defined but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","'handleChange' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["139"],["140"],"Assign object to a variable before exporting as module default","'DraggableColorBox' is defined but never used.","'getThemeProps' is defined but never used.","'SortableContainer' is defined but never used.","'SortableElement' is defined but never used.","no-global-assign","no-unsafe-negation"]