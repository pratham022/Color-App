[{"/home/prathamesh/REACT_/Colors-Project/colors-app/src/App.js":"1","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/sizes.js":"2","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteStyles.js":"3","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/DraggableColorBoxStyles.js":"4","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFooterStyles.js":"5","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/NewPaletteFormStyles.js":"6","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFormNavStyles.js":"7","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteListStyles.js":"8","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorBoxStyles.js":"9","/home/prathamesh/REACT_/Colors-Project/colors-app/src/Page.js":"10","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteMetaForm.js":"11","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteList.js":"12","/home/prathamesh/REACT_/Colors-Project/colors-app/src/MiniPalette.js":"13","/home/prathamesh/REACT_/Colors-Project/colors-app/src/index.js":"14","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorPickerFormStyles.js":"15","/home/prathamesh/REACT_/Colors-Project/colors-app/src/Navbar.js":"16"},{"size":3833,"mtime":1609751825171,"results":"17","hashOfConfig":"18"},{"size":758,"mtime":1609590790374,"results":"19","hashOfConfig":"18"},{"size":855,"mtime":1609169550354,"results":"20","hashOfConfig":"18"},{"size":1040,"mtime":1609590211540,"results":"21","hashOfConfig":"18"},{"size":296,"mtime":1609580045488,"results":"22","hashOfConfig":"18"},{"size":1230,"mtime":1609580422068,"results":"23","hashOfConfig":"18"},{"size":963,"mtime":1609570037132,"results":"24","hashOfConfig":"18"},{"size":1635,"mtime":1609685449525,"results":"25","hashOfConfig":"18"},{"size":743,"mtime":1609586438431,"results":"26","hashOfConfig":"18"},{"size":157,"mtime":1609752121003,"results":"27","hashOfConfig":"18"},{"size":3872,"mtime":1609752217848,"results":"28","hashOfConfig":"18"},{"size":4698,"mtime":1609753084638,"results":"29","hashOfConfig":"18"},{"size":1895,"mtime":1609753026956,"results":"30","hashOfConfig":"18"},{"size":574,"mtime":1609753158553,"results":"31","hashOfConfig":"18"},{"size":373,"mtime":1609569447817,"results":"32","hashOfConfig":"18"},{"size":4211,"mtime":1609753592476,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vc23ne",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"/home/prathamesh/REACT_/Colors-Project/colors-app/src/App.js",["73"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/sizes.js",["74"],"// // Extra small devices (portrait phones, less than 576px)\n// // No media query for `xs` since this is the default in Bootstrap\n\n// // Small devices (landscape phones, 576px and up)\n// @media (min-width: 576px) { ... }\n\n// // Medium devices (tablets, 768px and up)\n// @media (min-width: 768px) { ... }\n\n// // Large devices (desktops, 992px and up)\n// @media (min-width: 992px) { ... }\n\n// // Extra large devices (large desktops, 1200px and up)\n// @media (min-width: 1200px) { ... }\n\nexport default {\n    up() {\n\n    },\n    down(size) {\n        const sizes = {\n            xs: \"576px\",\n            sm: \"768px\",\n            md: \"992px\",\n            lg: \"1200px\",\n            xl: '1600px'\n        }\n        return `@media (max-width: ${sizes[size]})`;\n    }\n}","/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteStyles.js",["75"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/DraggableColorBoxStyles.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFooterStyles.js",["76"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/NewPaletteFormStyles.js",[],["77","78"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteFormNavStyles.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/PaletteListStyles.js",["79"],"import sizes from './sizes';\nimport bg from './bg.svg';\n\nexport default {\n\n    // we can reference fade-exit from any file now. And also it will not be prefixed by File name and other things\n    \"@global\": {\n        \".fade-exit\": {\n            opacity: 1\n        },\n        \".fade-exit-active\": {\n            opacity: 0,\n            transition: 'opacity 500ms ease-out'\n        }\n    },\n\n    root: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        /* background by SVGBackgrounds.com */\n        backgroundColor: 'rgb(54, 60, 170)',\n        backgroundImage: `url(${bg})`,\n        overflow: 'scroll',\n    },\n    heading: {\n        fontSize: '2rem'\n    },\n    container: {\n        width: '50%',\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        [sizes.down('xl')]: {\n            width: '80%'\n        },\n        [sizes.down('xs')]: {\n            width: '75%'\n        }\n\n\n    },\n    nav: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n        color: 'white',\n        alignItems: 'center',\n        '& a': {\n            color: 'white'\n        }\n    },\n    palettes: {\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 30%)',\n        gridGap: '1.5rem',\n        [sizes.down('md')]: {\n            gridTemplateColumns: 'repeat(2, 50%)'\n        },\n        [sizes.down('xs')]: {\n            gridTemplateColumns: 'repeat(1, 100%)',\n            gridGap: '1.4rem'\n        }\n    }\n};",["80","81"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorBoxStyles.js",["82","83"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/Page.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteMetaForm.js",["84","85"],"import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\n\nclass PaletteMetaForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            newPaletteName: '',\n            stage: 'form',\n        }\n        this.showEmojiPicker = this.showEmojiPicker.bind(this);\n        this.savePalette = this.savePalette.bind(this);\n    }\n    componentDidMount() {\n        ValidatorForm.addValidationRule('isPaletteNameUnique', value => (\n            this.props.palettes.every(currPalette => (\n                currPalette.paletteName.toLowerCase() !== value.toLowerCase()\n            ))\n        ));\n    }\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n    }\n    showEmojiPicker() {\n        this.setState({\n            stage: 'emoji'\n        })\n    }\n    savePalette(newEmoji) {\n        \n        const newPalette = {paletteName: this.state.newPaletteName, emoji: newEmoji.native};\n        this.props.handleSubmit(newPalette);\n        this.setState({\n            stage: ''\n        })\n    }\n\n    render() { \n        const { newPaletteName } = this.state;\n        const {handleClose, open} = this.props;\n        return ( \n            <div>\n                <Dialog open={open && this.state.stage === 'emoji'} onClose={handleClose}>\n                <DialogTitle id=\"form-dialog-title\">Pick a Palette Emoji</DialogTitle>\n                    <Picker onSelect={this.savePalette} title='Pick a Palette Emoji'/>\n                </Dialog>\n                <Dialog open={open && this.state.stage === 'form'} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Choose a Palette Name</DialogTitle>\n                    <ValidatorForm onSubmit={this.showEmojiPicker}>\n                        <DialogContent>\n                            <DialogContentText>\n                                PLease enter a name for your new beautiful palette. Make sure it's unique!\n                            </DialogContentText>\n                        \n                            <TextValidator \n                                label='Palette Name' \n                                value={this.state.newPaletteName} \n                                name='newPaletteName' \n                                onChange={this.handleChange} \n                                fullWidth\n                                margin='normal'\n                                validators={['required', 'isPaletteNameUnique']} \n                                errorMessages={['Enter Palette Name', 'Palette Name already used']}/>\n                        \n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button\n                                variant='contained' \n                                color='primary' \n                                type='submit'>\n                                    Save Palette\n                            </Button>\n                        </DialogActions>\n                    </ValidatorForm>\n                </Dialog>\n            </div>\n        );\n    }\n}\n \nexport default PaletteMetaForm;","/home/prathamesh/REACT_/Colors-Project/colors-app/src/PaletteList.js",["86","87","88","89","90"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/MiniPalette.js",["91"],"import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/MiniPaletteStyles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { render } from '@testing-library/react';\n\nclass MiniPalette extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n        this.deletePalette = this.deletePalette.bind(this);\n    }\n    deletePalette(evt) {\n        evt.stopPropagation();              // makes sure that we are not changing the routes\n        this.props.openDialog(this.props.id)\n    }\n    render() {\n        console.log('rendering');\n        const {classes, paletteName, emoji, colors, handleClick, id} = this.props; \n        const miniColorBoxes = colors.map(color => (\n            <div className={classes.miniColor} \n                style={{background: color.color}} \n                key={color.name}>\n    \n            </div>\n        ));\n        return ( \n            <div className={classes.root} onClick={() => handleClick(id)}>\n                <DeleteIcon \n                    className={classes.deleteIcon} onClick={this.deletePalette}/>\n                <div className={classes.colors}>\n                    {miniColorBoxes}\n                </div>\n                <h5 className={classes.title}>{paletteName} <span className={classes.emoji}>{emoji}</span></h5>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(MiniPalette);\n\n\n\n\n\n// const styles = {\n//     main: {\n//         backgroundColor: 'purple',\n//         border: '3px solid teal',\n//         '& h1': {\n//             color: 'white',\n//         }\n//     }, \n//     secondary: {\n//         backgroundColor: 'pink',\n//     }\n// };\n\n// return (\n//     <div className={classes.main}>\n//         <h1>Mini Palette</h1>\n//         <h1 className={classes.secondary} >Secondary</h1>\n//     </div>\n// )","/home/prathamesh/REACT_/Colors-Project/colors-app/src/index.js",["92"],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/styles/ColorPickerFormStyles.js",[],"/home/prathamesh/REACT_/Colors-Project/colors-app/src/Navbar.js",["93","94","95"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/styles';\n\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport './Navbar.css';\nimport sizes from './styles/sizes';\n\nconst styles = {\n    Navbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        height: '6vh',\n        backgroundColor: 'white'\n    },\n    logo: {\n        marginRight: '15px',\n        padding: '0 13px',\n        fontSize: '22px',\n        backgroundColor: '#eceff1',\n        fontFamily: 'Roboto',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        alignItems: 'center',\n        '& a': {\n            textDecoration: 'none',\n            color: 'black'\n        },\n        [sizes.down('xs')]: {\n            display: 'none'\n        }\n    },\n    slider: {\n        width: '340px',\n        margin: '0 10px',\n        display: 'inline-block',\n        [sizes.down('sm')]: {\n            width: '150px'\n        }\n    }\n}\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            format: 'hex',\n            open: false\n        }\n        this.handleFormatChange = this.handleFormatChange.bind(this);\n        this.closeSnackbar = this.closeSnackbar.bind(this);\n    }\n    handleFormatChange(e) {\n        this.setState({\n            format: e.target.value,\n            open: true\n        });\n        this.props.handleChange(e.target.value);\n    }\n    closeSnackbar() {\n        this.setState({\n            open: false\n        });\n    }\n    render() { \n        const { level, changeLevel, handleChange, showingAllColors, classes } = this.props;\n        const { format } = this.state;\n        return ( \n           <header className={classes.Navbar}>\n               <div className={classes.logo}>\n                   <Link to='/'>reactcolorpicker</Link>\n               </div>\n               {showingAllColors && (\n                    <div>\n                        <span>Level: {level}</span>\n                        <div className={classes.slider}>\n                            <Slider \n                                defaultValue={level} \n                                min={100} \n                                max={900} \n                                step={100} \n                                onAfterChange={changeLevel}/>\n                        </div>\n                    </div>\n               )}\n               <div className='select-container'>\n                    <Select value={this.state.format} onChange={this.handleFormatChange}>\n                        <MenuItem value='hex'>HEX - #ffffff</MenuItem>\n                        <MenuItem value='rgb'>RGB - rgb(255, 255, 255)</MenuItem>\n                        <MenuItem value='rgba'>RGBA - rgba(255, 255, 255, 0)</MenuItem>\n                    </Select>\n               </div>\n               <Snackbar \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={3000}\n                    message={<span id='message-id'>Format Changed To {format.toUpperCase()}</span>}\n                    ContentProps={{\n                        'aria-describedby': 'message-id'\n                    }}\n                    onClose={this.closeSnackbar}\n                    action={[\n                        <IconButton \n                            onClick={this.closeSnackbar} \n                            color='inherit' \n                            key='close' \n                            aria-label='close'>\n                            \n                            <CloseIcon />\n                        </IconButton>\n                    ]}\n               />\n           </header> \n        );\n    }\n}\n\n \nexport default withStyles(styles)(Navbar);",{"ruleId":"96","severity":1,"message":"97","line":42,"column":66,"nodeType":"98","messageId":"99","endLine":42,"endColumn":68},{"ruleId":"100","severity":1,"message":"101","line":16,"column":1,"nodeType":"102","endLine":30,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","endLine":29,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","endLine":14,"endColumn":2},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":1,"nodeType":"102","endLine":69,"endColumn":3},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":4,"column":1,"nodeType":"102","endLine":24,"endColumn":2},{"ruleId":"109","severity":1,"message":"113","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":17},{"ruleId":"109","severity":1,"message":"114","line":50,"column":17,"nodeType":"111","messageId":"112","endLine":50,"endColumn":31},{"ruleId":"109","severity":1,"message":"115","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"116","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":21},{"ruleId":"109","severity":1,"message":"117","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":58,"column":35,"nodeType":"111","messageId":"112","endLine":58,"endColumn":48},{"ruleId":"109","severity":1,"message":"119","line":59,"column":34,"nodeType":"111","messageId":"112","endLine":59,"endColumn":44},{"ruleId":"109","severity":1,"message":"120","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"121","line":11,"column":7},{"ruleId":"109","severity":1,"message":"122","line":10,"column":18,"nodeType":"111","messageId":"112","endLine":10,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":33,"column":9,"nodeType":"125","messageId":"99","endLine":33,"endColumn":19},{"ruleId":"109","severity":1,"message":"126","line":75,"column":37,"nodeType":"111","messageId":"112","endLine":75,"endColumn":49},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"no-unused-vars","'sizes' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'newPaletteName' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'deletePalette' is assigned a value but never used.","'deletingId' is assigned a value but never used.","'render' is defined but never used.","Parsing error: Expected corresponding JSX closing tag for <BrowserRouter>\n\n   9 |   <BrowserRouter>\n  10 |         <App />\n> 11 |       </React.StrictMode>\n     |       ^\n  12 |   </BrowserRouter>,\n  13 |   document.getElementById('root')\n  14 | );","'Range' is defined but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]